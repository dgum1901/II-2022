m1.quilpie <- lm(y ~ SOI, data = quilpie)
coef(m1.quilpie)
m1.quilpie <- lm(y ~ Phase, data = quilpie)
coef(m1.quilpie)
coef(summary(m1))
library(aod)
library(aod)
#perform Wald Test to determine if 3rd and 4th predictor variables are both zero
wald.test(Sigma = vcov(m1), b = coef(m1))
coef(m1)
vcov(m1)
#perform Wald Test to determine if 3rd and 4th predictor variables are both zero
wald.test(Sigma = vcov(m1), b = coef(m1), Terms = 3:4)
#perform Wald Test to determine if 3rd and 4th predictor variables are both zero
wald.test(Sigma = vcov(m1), b = coef(m1), Terms = 1)
coef(summary(m1))
#Esto borra la edad como variable del modelo :0
m0 <- update(m1, .~1)
(z.Wald <- coef(summary(m1))[2, 3])
(P.Wald <- coef(summary(m1))[2, 4])
summary(m1)
coef(summary(m1))
var(blocks$Number)
mean(blocks$Number)
ppois( 7, 1.8)
ppois( 7, 2.5)
ppois( 7, 1.8)
ppois( 7, 2.5)
ppois(q=12, lambda=30)
ppois(12,30)
var(blocks$Number)
mean(blocks$Number)
knitr::opts_chunk$set(echo = TRUE)
Babies <- read.csv("~/GitHub/II-2022/Modelos Lineales/Base.txt")
colnames(Babies) <- c('Mes','PromedioSemanas','TamMuestra','PromedioTemperatura')
p <- lm(PromedioSemanas ~ PromedioTemperatura, data=Babies)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab = "Promedio Temperatura", ylab = "Promedio semanas" )
abline(coef(p), lty = 1, lwd = 2)
q <-  lm(PromedioSemanas ~ PromedioTemperatura, data=Babies, weights = TamMuestra)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab = "Promedio Temperatura", ylab = "Promedio semanas" )
abline(coef(p), lty = 1, lwd = 2)
abline(coef(q), lty = 2, lwd = 2)
summary(q)
confint(q, level = 0.9)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab = "Promedio Temperatura", ylab = "Promedio semanas" )
abline(coef(p), lty = 1, lwd = 2)
abline(coef(q), lty = 2, lwd = 2)
cosa <- confint(q)
x <- Babies$PromedioTemperatura
x <-(PromedioTemperatura = seq(min(x), max(x), by = 0.05))
cosa <-
predict(q,
>>>>>>> 8a1a8bf2e943b7c9c7f25de55c1ea75272e8898b
newdata = data.frame(x),
interval = "confidence",
level = 0.95)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies,
xlab = "Promedio Temperatura", ylab = "Promedio semanas")
abline(coef(q), lty = 1, lwd = 2)
lines(x, cosa[,2], col="blue", lty=2)
lines(x, cosa[,3], col="blue", lty=2)
<<<<<<< HEAD
=======
scatter.smooth(rstandard(q) ~ fitted(q))
qqnorm(rstandard(q))
qqline(rstandard(q))
plot(cooks.distance(q), type = "h")
plot(rstandard(q) ~ Babies$PromedioTemperatura)
knitr::opts_chunk$set(echo = TRUE)
Babies <- read.csv("~/GitHub/II-2022/Modelos Lineales/Base.txt")
colnames(Babies) <- c('Mes','PromedioSemanas','TamMuestra','PromedioTemperatura')
p <- lm(PromedioSemanas ~ PromedioTemperatura, data=Babies)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab = "Promedio Temperatura", ylab = "Promedio semanas" )
abline(coef(p), lty = 1, lwd = 2)
q <-  lm(PromedioSemanas ~ PromedioTemperatura, data=Babies, weights = TamMuestra)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab = "Promedio Temperatura", ylab = "Promedio semanas" )
abline(coef(p), lty = 1, lwd = 2)
abline(coef(q), lty = 2, lwd = 2)
summary(q)
confint(q, level = 0.9)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab = "Promedio Temperatura", ylab = "Promedio semanas" )
abline(coef(p), lty = 1, lwd = 2)
abline(coef(q), lty = 2, lwd = 2)
cosa <- confint(q)
x <- Babies$PromedioTemperatura
x <-(PromedioTemperatura = seq(min(x), max(x), by = 0.05))
cosa <-
predict(q,
newdata = data.frame(x),
interval = "confidence",
level = 0.95)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies,
xlab = "Promedio Temperatura", ylab = "Promedio semanas")
abline(coef(q), lty = 1, lwd = 2)
lines(x, cosa[,2], col="blue", lty=2)
lines(x, cosa[,3], col="blue", lty=2)
scatter.smooth(rstandard(q) ~ fitted(q))
qqnorm(rstandard(q))
qqline(rstandard(q))
plot(cooks.distance(q), type = "h")
plot(rstandard(q) ~ Babies$PromedioTemperatura)
rowSums(influence.measures(q)$is.inf)
rowSums(influence.measures(p)$is.inf)
beta <- c(0.23, 0.04, 0.06, 0.01, 0.09, 0.05, 0.30)
se <- c(0.13, 0.04, 0.05, 0.03, 0.06, 0.02, 0.07)
z <- beta/se; pvals <- (1-pnorm(abs(z)))*2
round(pvals, 3)
z
0.1415096/0.05340039
summary(m1)
#Calcula las estadísticas de las pruebas de puntuación (estadísticas z) para agregar covariables a un modelo lineal generalizado:
( z.score <- glm.scoretest(m0, blocks$Age))
library(statmod)
#Calcula las estadísticas de las pruebas de puntuación (estadísticas z) para agregar covariables a un modelo lineal generalizado:
( z.score <- glm.scoretest(m0, blocks$Age))
library(statmod)
#Calcula las estadísticas de las pruebas de puntuación (estadísticas z) para agregar covariables a un modelo lineal generalizado:
( z.score <- glm.scoretest(m0, blocks$Age))
( P.score <- 2*(1-pt(abs(z.score), df=df.residual(m1)))) #La función pt devuelve el valor de la función de densidad acumulada (cdf) de la distribución t de Student dada una determinada variable aleatoria x y grados de libertad df
#por ser t student y su simetría ent quedaría = 2(1 − Pr {zscore < grados de libertad}).
#perform Wald Test to determine if 3rd and 4th predictor variables are both zero
wald.test(Sigma = vcov(p), b = coef(p), Terms = 1) #se rechaza la hipotesis nula
#Esto borra la edad como variable del modelo :0
m0 <- update(m1, .~1)
(z.Wald <- coef(summary(m1))[2, 3])
(P.Wald <- coef(summary(m1))[2, 4])
#Esto borra la edad como variable del modelo :0
m0 <- update(m1, .~1)
(z.Wald <- coef(summary(m1))[2, 3])
(P.Wald <- coef(summary(m1))[2, 4])
#perform Wald Test to determine if 3rd and 4th predictor variables are both zero
wald.test(Sigma = vcov(m1), b = coef(m1), Terms = 1) #se rechaza la hipotesis nula
?glm.scoretest
update(m1, .~1)
m1
m0
m1
library(statmod)
#Toma el modelo vacío m0 y
( z.score <- glm.scoretest(m0, blocks$Age) )
( P.score <- 2*(1-pt(abs(z.score), df=df.residual(m1))) )
(2 * pnorm( abs(z.score), lower.tail=FALSE))
chisq.LRT <- anova(m1)[2, 2]
P.LRT <- anova(m1, test="Chisq")[2, 5]
library(statmod)
#Toma el modelo vacío m0 y
( z.score <- glm.scoretest(m0, blocks$Age) )
( P.score <- 2*(1-pt(abs(z.score), df=df.residual(m1))) )
chisq.LRT <- anova(m1)[2, 2]
P.LRT <- anova(m1, test="Chisq")[2, 5]
(chisq.LRT <- anova(m1)[2, 2])
(P.LRT <- anova(m1, test="Chisq")[2, 5])
anova(m1)
anova(m1)
?anova
anova(m1, test="Chisq")
analisis <- anova(m1, test="Chisq") #analysis of variance (or deviance)
analisis <- anova(m1, test="Chisq") #analysis of variance (or deviance)
analisis
analisis[2,2]
analisis[2, 5]
analisis <- anova(m1, test="Chisq") #analysis of variance (or deviance)
(chisq.LRT <- analisis[2,2])
(P.LRT <- analisis[2, 5])
round(c(z.Wald, z.score, sqrt(chisq.LRT)), 4)
round(c(P.Wald, P.score, P.LRT), 4); min(blocks$Number)
round(c(z.Wald, z.score, sqrt(chisq.LRT)), 4)
round(c(P.Wald, P.score, P.LRT), 4)
min(blocks$Number)
c(z.Wald, z.score, sqrt(chisq.LRT))
round(c(P.Wald, P.score, P.LRT), 4)
View(q)
>>>>>>> 8a1a8bf2e943b7c9c7f25de55c1ea75272e8898b
knitr::opts_chunk$set(echo = TRUE)
library(GLMsData)
data(cervical)
?fitted
fitted(q)
View(Base)
knitr::opts_chunk$set(echo = TRUE)
library(GLMsData)
data(cervical)
cervical$AgeNum <- rep(c(25, 35, 45, 55), 4)
### Part 1
with(cervical, {
plot(Deaths / Wyears ~ AgeNum, type = "n")
lines(Deaths / Wyears ~ AgeNum,
lty = 1,
subset = (Country == unique(Country)[1]))
lines(Deaths / Wyears ~ AgeNum,
lty = 2,
subset = (Country == unique(Country)[2]))
lines(Deaths / Wyears ~ AgeNum,
lty = 3,
subset = (Country == unique(Country)[3]))
lines(Deaths / Wyears ~ AgeNum,
lty = 4,
subset = (Country == unique(Country)[4]))
legend("topleft",
lty = 1:4,
legend = unique(cervical$Country))
})
knitr::opts_chunk$set(echo = TRUE)
library(GLMsData)
data(cervical)
# Acá Wyears es T
str(cervical)
## Inciso 1
plot(Deaths ~ Country, data = cervical)
plot(Deaths ~ Age, data = cervical)
#plot(Deaths ~ jitter(Wyears), data = cervical)#Para el tercer gráfico, hace falta mencionar como se verán los años de exposición para este ajuste, será la suma de los años a los que las mujeres estuvieron expuesta en conjunto al cáncer(para hacer un conteo de muertes por años de exposición)
data(cervical)
cervical$AgeNum <- rep( c(25, 35, 45, 55), 4)
par( mfrow=c(2, 2))
### Part 1
with( cervical, {
plot( Deaths/Wyears ~ AgeNum, type="n")
lines(Deaths/Wyears ~ AgeNum, lty=1,
subset=(Country==unique(Country)[1]) )
lines(Deaths/Wyears ~ AgeNum, lty=2,
subset=(Country==unique(Country)[2]) )
lines(Deaths/Wyears ~ AgeNum, lty=3,
subset=(Country==unique(Country)[3]) )
lines(Deaths/Wyears ~ AgeNum, lty=4,
subset=(Country==unique(Country)[4]) )
legend("topleft", lty=1:4, legend=unique(cervical$Country) )
})
?offset
### Part 3
cc.m0 <- glm(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical,
family = poisson)
plot(rstandard(cc.m0) ~ fitted(cc.m0), main = "Poisson glm")
offset(log(Cervical$Wyears))
offset(log(cervical$Wyears))
(log(cervical$Wyears))
(cervical$Wyears)
cc.m0Q <- glm(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical,
family = quasipoisson)
plot(rstandard(cc.m0Q) ~ fitted(cc.m0Q), main = "Quasi-Poisson model")
cc.m0NB <- glm.nb(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical)
library(MASS)
cc.m0NB <- glm.nb(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical)
cc.m0NB <- glm.convert(cc.m0NB)
?glm
library(MASS)
cc.m0NB <- glm.nb(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical)
cc.m0NB <- glm.convert(cc.m0NB)
plot( rstandard(cc.m0NB) ~ fitted(cc.m0NB), main="Neg. bin. glm" )
?glm.convert
scatter.smooth( rstandard(cc.m0NB) ~ fitted(cc.m0NB), main="Neg. bin. glm" )
### Part 3
cc.m0 <- glm(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical,
family = poisson)
scatter.smooth(rstandard(cc.m0) ~ fitted(cc.m0), main = "Poisson glm")
cc.m0Q <- glm(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical,
family = quasipoisson)
scatter.smooth(rstandard(cc.m0Q) ~ fitted(cc.m0Q), main = "Quasi-Poisson model")
data(grazing)
View(grazing)
data(grazing)
plot(Birds ~ When, data = grazing)
plot(Birds ~ Grazed, data = grazing)
plot(Birds ~ fct_rev(When), data = grazing)
plot(Birds ~ factor(When), data = grazing)
data(grazing)
plot(Birds ~ factor(When), data = grazing)
plot(Birds ~ Grazed, data = grazing)
plot(Birds ~ fct_rev(factor(When)), data = grazing)
plot(Birds ~ factor(When,ordered = TRUE), data = grazing)
plot(Birds ~ factor(When,ordered = F), data = grazing)
modelo_Poisson<-glm(formula = Birds ~ Grazed * When, data = grazing, family = poisson())
medidas <- influence.measures(modelo_Poisson)
medidas
medidas$is.inf
colSums(medidas$is.inf)
rowSums(medidas$is.inf)
medidas$is.inf[,7]
medidas$is.inf[,7]
which(medidas$is.inf[,7])
rowSums(medidas$is.inf)
influence.measures(modelo_Poisson)
medidas$is.inf
rowSums(medidas$is.inf)
modelo_Poisson
c(deviance(modelo_Poisson), df(modelo_Poisson))
df(modelo_Poisson)
deviance(modelo_Poisson)
anova(modelo_Poisson)
deviance(modelo_Poisson)
modelo_Poissonnb<-glm.nb( formula = Birds ~ Grazed*When, data = grazing)
class(modelo_Poissonnb)
modelo_Poissonnb <- glm.convert(cc.m0NB)
class(modelo_Poissonnb)
anova(modelo_Poisson)
modelo_Poisson$fitted.values
anova(modelo_Poisson)
modelo_PoissonQuasi <-
glm(formula = Birds ~ Grazed * When,
data = grazing,
family = quasipoisson())
anova(modelo_PoissonQuasi)
modelo_Poissonnb<-glm.nb( formula = Birds ~ Grazed*When, data = grazing)
modelo_Poissonnb <- glm.convert(cc.m0NB)
anova(modelo_Poissonnb)
knitr::opts_chunk$set(echo = TRUE)
library(GLMsData)
Babies <- read.csv("~/GitHub/II-2022/Modelos Lineales/Base.txt")
colnames(Babies) <- c('Mes','PromedioSemanas','TamMuestra','PromedioTemperatura')
p <- lm(PromedioSemanas ~ PromedioTemperatura, data=Babies)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab = "Promedio Temperatura", ylab = "Promedio semanas" )
abline(coef(p), lty = 1, lwd = 2)
q <-  lm(PromedioSemanas ~ PromedioTemperatura, data=Babies, weights = TamMuestra)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab = "Promedio Temperatura", ylab = "Promedio semanas" )
abline(coef(p), lty = 1, lwd = 2)
abline(coef(q), lty = 2, lwd = 2)
summary(q)
confint(q, level = 0.9)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab = "Promedio Temperatura", ylab = "Promedio semanas" )
abline(coef(p), lty = 1, lwd = 2)
abline(coef(q), lty = 2, lwd = 2)
x <- Babies$PromedioTemperatura
x <- seq(min(x), max(x), by = 0.05)
cosa <-
predict(q,
newdata = data.frame(PromedioTemperatura = x),
interval = "confidence",
level = 0.95)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies,
xlab = "Promedio Temperatura", ylab = "Promedio semanas")
abline(coef(q), lty = 1, lwd = 2)
lines(x, cosa[,2], col="blue", lty=2)
lines(x, cosa[,3], col="blue", lty=2)
scatter.smooth(rstandard(q) ~ fitted(q))
qqnorm(rstandard(q))
qqline(rstandard(q))
plot(cooks.distance(q), type = "h")
plot(rstandard(q) ~ Babies$PromedioTemperatura)
rowSums(influence.measures(q)$is.inf)
data(blocks)
plot( jitter(Number)~Age,  data=blocks, las=1,
xlab="Número de bloques", ylab="Edad del niño" )
plot( Number~cut(Age, 3), data=blocks)
var(blocks$Number)
mean(blocks$Number)
data(blocks)
m1 <- glm(Number~Age, data=blocks, family=poisson)
m1
#Forma uno
coef(summary(m1))
#Forma dos, pag 251
cov.mat <- summary(m1)$cov.scaled
sqrt( diag( cov.mat ) )
#Pag 258
deviance(m1)
#Esto borra la edad como variable del modelo :0
m0 <- update(m1, .~1)
(z.Wald <- coef(summary(m1))[2, 3])
(P.Wald <- coef(summary(m1))[2, 4])
library(statmod)
#Toma el modelo vacío m0 y
( z.score <- glm.scoretest(m0, blocks$Age) )
( P.score <- 2*(1-pt(abs(z.score), df=df.residual(m1))) )
analisis <- anova(m1, test="Chisq") #analysis of variance (or deviance)
(chisq.LRT <- analisis[2,2])
(P.LRT <- analisis[2, 5])
round(c(z.Wald, z.score, sqrt(chisq.LRT)), 4)
round(c(P.Wald, P.score, P.LRT), 4)
min(blocks$Number)
confint(m1)
x <- seq(min(blocks$Age), max(blocks$Age), length = 100)
cosa <- predict(m1,
newdata = data.frame(Age = x),
type = "response",
se.fit = TRUE)
plot(jitter(Number) ~ Age, data = blocks)
lines(cosa$fit ~ x, lwd = 2)
t.star <- qt(p = 0.975, df = df.residual(m1)) #cuantil de t-student
ci.lo <- cosa$fit - t.star * cosa$se.fit
ci.hi <- cosa$fit + t.star * cosa$se.fit
lines(ci.lo ~ x, lty = 2)
lines(ci.hi ~ x, lty = 2)
data(blocks)
library(statmod)
par(mfrow = c(2, 2))
plot(rstandard(m1) ~ fitted(m1))
plot(cooks.distance(m1), type = "h")
qqnorm(rstandard(m1))
qqnorm(qresid(m1))
colSums(influence.measures(m1)$is.inf)
rowSums(influence.measures(m1)$is.inf)
data(belection)
plot(Females~Party, data = belection)
plot(Females~Region, data = belection)
library(statmod)
m2 <- glm(cbind(Females,Males)~Party + Region, data=belection, family=binomial())
#Veamos los graficos
par(mfrow = c(2, 2))
plot(rstandard(m2) ~ fitted(m2))
plot(cooks.distance(m2), type = "h")
qqnorm(rstandard(m2))
qqnorm(qresid(m2))
colSums(influence.measures(m2)$is.inf)
rowSums(influence.measures(m2)$is.inf)
c( deviance(m2), df.residual(m2) )
sum( resid(m2, type="pearson")^2 )
#Veamos las odds
exp(coef(m2))
(odds.ratio.conservador <- exp(coef(m2))[[1]])
(odds.ratio.laborista <- odds.ratio.conservador * exp(coef(m2))[[3]])
# Ahora las probabilidades solas para el conservador y el laborista
odds.ratio.conservador / ( 1 + odds.ratio.conservador)
odds.ratio.laborista / (1 + odds.ratio.laborista)
# Note que el mi es la muestra
m <- belection$Females + belection$Males
y <-belection$Females / m
min(m * y)
min(m * (1 - y))
library(forcats)
data(germBin)
data(germ)
# fct_rev invierte los niveles
m4 <-
glm(fct_rev(Result) ~ Seeds + Extract ,
data = germBin,
family = binomial())
m5 <- glm(
Germ / Total ~ Seeds + Extract,
family = binomial,
data = germ,
weights = Total
)
summary(m5)
summary(m4)
deviance(m4) #desviacion residual
deviance(m5)
1 - pchisq (m4$null.deviance - m4$deviance, 1)
1 - pchisq (m5$null.deviance - m5$deviance, 1)
analisis <- anova(m4, test="Chisq")
(chisq.LRT <- analisis[2,2])
(P.LRT <- analisis[2, 5])
analisis <- anova(m5, test="Chisq")
(chisq.LRT <- analisis[2,2])
(P.LRT <- analisis[2, 5])
#Página 193
sum( dbinom( germBin$Result=='Germ', size=1, prob=m4$fitted.values, log = TRUE) )
sum( dbinom( germ$Germ, size=germ$Total, prob=m5$fitted.values, log = TRUE) )
data(cervical)
cervical$AgeNum <- rep(c(25, 35, 45, 55), 4)
### Part 1
with(cervical, {
plot(Deaths / Wyears ~ AgeNum, type = "n") #Las muertes y las wyears se escalan
lines(Deaths / Wyears ~ AgeNum,
lty = 1,
subset = (Country == unique(Country)[1]))
lines(Deaths / Wyears ~ AgeNum,
lty = 2,
subset = (Country == unique(Country)[2]))
lines(Deaths / Wyears ~ AgeNum,
lty = 3,
subset = (Country == unique(Country)[3]))
lines(Deaths / Wyears ~ AgeNum,
lty = 4,
subset = (Country == unique(Country)[4]))
legend("topleft",
lty = 1:4,
legend = unique(cervical$Country))
})
### Part 3
cc.m0 <- glm(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical,
family = poisson)
scatter.smooth(rstandard(cc.m0) ~ fitted(cc.m0), main = "Poisson glm")
cc.m0Q <- glm(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical,
family = quasipoisson)
scatter.smooth(rstandard(cc.m0Q) ~ fitted(cc.m0Q), main = "Quasi-Poisson model")
library(MASS)
cc.m0NB <- glm.nb(Deaths ~ offset(log(Wyears)) + Age + Country,
data = cervical)
cc.m0NB <- glm.convert(cc.m0NB)
scatter.smooth( rstandard(cc.m0NB) ~ fitted(cc.m0NB), main="Neg. bin. glm" )
data(grazing)
plot(Birds ~ When, data = grazing)
plot(Birds ~ Grazed, data = grazing)
modelo_Poisson<-glm(formula = Birds ~ Grazed * When, data = grazing, family = poisson())
medidas <- influence.measures(modelo_Poisson)
rowSums(medidas$is.inf)
anova(modelo_Poisson)
modelo_PoissonQuasi <-
glm(formula = Birds ~ Grazed * When,
data = grazing,
family = quasipoisson())
anova(modelo_PoissonQuasi)
modelo_Poissonnb<-glm.nb( formula = Birds ~ Grazed*When, data = grazing)
modelo_Poissonnb <- glm.convert(cc.m0NB)
anova(modelo_Poissonnb)
