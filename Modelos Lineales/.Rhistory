knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
require("knitcitations")
require("bibtex")
library(rmdformats)
library(readxl)
library(dplyr)
library(plyr)
library(fOptions)
library(ggplot2)
library(kableExtra)
library(extrafont)
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
library(readr)
data <- read_csv("data.csv")
View(data)
View(data)
tinytex::reinstall_tinytex()
Y
tinytex::reinstall_tinytex()
tinytex::reinstall_tinytex()
install.packages("tinytex")
tinytex::tlmgr_update()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
inytex::install_tinytex()
tinytex::install_tinytex()
inytex::install_tinytex()
tinytex::install_tinytex()
install.packages("tinytex")
knitr::opts_chunk$set(echo = TRUE)
Babies <- read.csv("~/GitHub/II-2022/Modelos Lineales/Babies.txt")
View(Babies)
View(Babies)
qqnorm(Babies$Monthly.average.temperature.six.months.after.birth..â..F., pch = 1, frame = FALSE)
qqline(Babies$Monthly.average.temperature.six.months.after.birth..â..F., col = "steelblue", lwd = 2)
qqline(Babies$Monthly.average.temperature.six.months.after.birth..â..F., col = "steelblue", lwd = 2)
qqnorm(Babies$Monthly.average.temperature.six.months.after.birth..â..F., pch = 1, frame = FALSE)
qqline(Babies$Monthly.average.temperature.six.months.after.birth..â..F., col = "steelblue", lwd = 2)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
var(Babies
)
Babies <- read.csv("~/GitHub/II-2022/Modelos Lineales/Babies.txt")
View(Babies)
Babies <- read.csv("~/GitHub/II-2022/Modelos Lineales/Babies.txt")
View(Babies)
Base <- read.csv("~/GitHub/II-2022/Modelos Lineales/Base.txt")
View(Base)
Babies <- read.csv("~/GitHub/II-2022/Modelos Lineales/Base.txt")
Babies <- read.csv("~/GitHub/II-2022/Modelos Lineales/Base.txt")
View(Babies)
View(Babies)
qqnorm(Babies$Monthly.average.temperature.six.months.after.birth..â..F., pch = 1, frame = FALSE)
qqline(Babies$Monthly.average.temperature.six.months.after.birth..â..F., col = "steelblue", lwd = 2)
var(Babies)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies)
hist(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Mean.age.when.crawling.started..weeks.)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Monthly.average.temperature.six.months.after.birth..â..F. = 200)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Monthly.average.temperature.six.months.after.birth..â..F., break = 200)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Monthly.average.temperature.six.months.after.birth..â..F., break = 200)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Monthly.average.temperature.six.months.after.birth..â..F.,break =100)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Monthly.average.temperature.six.months.after.birth..â..F.,breaks = Babies$Sample.size)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Sample.size)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Sample.size, breaks = 200)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Sample.size, breaks = 50)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Sample.size, breaks = 10)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Monthly.average.temperature.six.months.after.birth..â..F., breaks = 50)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$Monthly.average.temperature.six.months.after.birth..â..F., breaks = 12)
sd(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
var(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
sd(Babies$Monthly.average.temperature.six.months.after.birth..â..F.)
hist(Babies$., breaks = 12)
hist(Babies$Mean.age.when.crawling.started..weeks., breaks = 12)
qqnorm(Babies$Mean.age.when.crawling.started..weeks., pch = 1, frame = FALSE)
qqline(Babies$Mean.age.when.crawling.started..weeks., col = "steelblue", lwd = 2)
mod_ols <- lm(Babies$Monthly.average.temperature.six.months.after.birth..â..F.~ Babies$Mean.age.when.crawling.started..weeks. + I(Babies$Mean.age.when.crawling.started..weeks.^2))  #Modelo de mínimos cuadrados ordinarios
mod_pond <- lm(I(sqrt(Babies$Sample.size) * Babies$Monthly.average.temperature.six.months.after.birth..â..F.) ~ 0 + sqrt(Babies$Sample.size) + I(sqrt(Babies$Sample.size) * Babies$Mean.age.when.crawling.started..weeks.) + I(sqrt(Babies$Sample.size) *
Babies$Mean.age.when.crawling.started..weeks.^2))
coef(mod_ols)
coef(mod_ols)
coef(mod_pond)
summary(mod_pond)
qqnorm(Babies$Monthly.average.temperature.six.months.after.birth..â..F., pch = 1, frame = FALSE)
qqline(Babies$Monthly.average.temperature.six.months.after.birth..â..F., col = "steelblue", lwd = 2)
plot(mod_ols )
plot(mod_ols )
qqnorm(Babies$Monthly.average.temperature.six.months.after.birth..â..F., pch = 1, frame = FALSE)
qqline(Babies$Monthly.average.temperature.six.months.after.birth..â..F., col = "steelblue", lwd = 2)
View(Babies)
View(Babies)
qqplot(Babies$Monthly.average.temperature.six.months.after.birth..â..F., pch,Babies$Mean.age.when.crawling.started..weeks.)
knitr::opts_chunk$set(echo = TRUE)
data(blocks)
library(statmod)
m1 <- glm(Number~Age, data=blocks, family=poisson)
knitr::opts_chunk$set(echo = TRUE)
Babies <- read.csv("~/GitHub/II-2022/Modelos Lineales/Base.txt")
library(GLMsData)
#Babies<-data(crawl)
colnames(Babies) <- c('Mes', 'PromedioSemanas','Frecuencia', 'PromedioTemperatura')
#qqnorm(Babies$Monthly.average.temperature.six.months.after.birth..â..F., pch = 1, frame = FALSE)
#qqline(Babies$Monthly.average.temperature.six.months.after.birth..â..F., col = "steelblue", lwd = 2)
#qqnorm(Babies$PromedioTemperatura, pch = 1, frame = FALSE)
#qqline(Babies$PromedioTemperatura, col = "steelblue", lwd = 2)
p <- lm(PromedioSemanas ~ PromedioTemperatura, data=Babies)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab="Promedio Temperatura", ylab="Promedio semanas" )
abline( coef(p), lty=1, lwd=2)
#var(Babies$PromedioTemperatura)
#sd(Babies$PromedioTemperatura)
#hist(Babies$PromedioTemperatura, breaks = 12)
mod_leo <-  lm(PromedioSemanas ~ PromedioTemperatura, data=Babies, weights = Frecuencia)
coef(mod_leo)
summary(mod_leo)
confint(mod_leo, level = 0.9)
mod_leo2 <-  lm(PromedioSemanas ~ PromedioTemperatura, data=Babies)
coef(mod_leo)
plot( PromedioSemanas ~ PromedioTemperatura, data=Babies, las=1,
xlab="Promedio Temperatura", ylab="Promedio semanas" )
abline( coef(p),col="red", lty=1, lwd=2)
abline( coef(mod_leo),col="blue", lty=1, lwd=2)
library(ggplot2)
ggplot(data = Babies, mapping = aes(x = Babies$PromedioTemperatura, y = Babies$PromedioSemanas)) + geom_point() + geom_smooth(method = lm)
confint(mod_leo, level = 0.95)
new.base <- data.frame(PromedioTemperatura = seq(30,50,2))
out <- predict(mod_leo, newdata = new.base, se.fit = TRUE)
names(out)
tstar <- qt(df=mod_leo$df.residual, p=0.975 ) # For a 95% CI
ci.lo <- out$fit - tstar*out$se.fit
ci.hi <- out$fit + tstar*out$se.fit
CIinfo <- cbind( Lower=ci.lo, Estimate=out$fit, Upper=ci.hi)
CIinfo
newA <- seq( min(Babies$PromedioTemperatura), max(Babies$PromedioTemperatura), length=11)
plot( Babies$PromedioSemanas~Babies$PromedioTemperatura, data=Babies)
abline(coef(mod_leo), lty=1)
lines(ci.lo~newA, lty=2)
lines(ci.hi~newA, lty=2)
rstandard(p)#residual estandarizado
fitted(p) #Este ejemplo demuestra cómo encontrar los valores ajustados de un modelo de regresión lineal usando la función added().
cooks.distance(p) #La distancia de Cook es un resumen de cuánto cambia un modelo de regresión cuando se elimina la i-ésima observación
scatter.smooth( rstandard(p) ~ fitted(p) )
qqnorm( rstandard(p) ); qqline( rstandard(p) )
plot( cooks.distance(p), type="h")
plot( rstandard(p) ~ Babies$PromedioTemperatura)
influence.measures(p)
#rowSums(influence.measures(p)$is.inf)
library("GLMsData")
data(blocks)
#par(mfrow=c(1, 2))
#plot(jitter(Number)~Age, data=blocks)
#plot( Number~cut(Age, 3), data=blocks)
plot( jitter(Number)~Age,  data=blocks, las=1,
xlab="Número de bloques", ylab="Edad del niño" )
var(blocks$Number)
mean(blocks$Number)
data(blocks)
m1 <- glm(Number~Age, data=blocks, family=poisson)
deviance(m1)
summary(m1)
data(blocks); library(statmod)
m1 <- glm(Number~Age, data=blocks, family=poisson)
m0 <- update(m1, .~1)
summary(m1)
(z.Wald <- coef(summary(m1))[2, 3])
(P.Wald <- coef(summary(m1))[2, 4])
( z.score <- glm.scoretest(m0, blocks$Age))#Calcula las estadísticas de las pruebas de puntuación (estadísticas z) para agregar covariables a un modelo lineal generalizado.
( P.score <- 2*(1-pt(abs(z.score), df=df.residual(m1)))) #La función pt devuelve el valor de la función de densidad acumulada (cdf) de la distribución t de Student dada una determinada variable aleatoria x y grados de libertad df
#por ser t student y su simetría ent quedaría = 2(1 − Pr {zscore < grados de libertad}).
anova(m1)
anova(m1, test="Chisq")
(chisq.LRT <- anova(m1)[2, 2])
( P.LRT <- anova(m1, test="Chisq")[2, 5])
c(z.Wald, z.score, sqrt(chisq.LRT))
round(c(P.Wald, P.score, P.LRT), 4)
min(blocks$Number)
newA <- seq( min(blocks$Age), max(blocks$Age), length=100)
newB <- predict( m1, newdata=data.frame(Age=newA), type="response",
se.fit=TRUE)
plot( jitter(Number)~Age, data=blocks)
lines(newB$fit ~ newA, lwd=2)
t.star <- qt(p=0.975, df=df.residual(m1))
ci.lo <- newB$fit - t.star * newB$se.fit
ci.hi <- newB$fit + t.star * newB$se.fit
lines(ci.lo~newA, lty=2)
lines(ci.hi~newA, lty=2)
data(blocks)
library(statmod)
m1 <- glm(Number~Age, data=blocks, family=poisson)
par(mfrow=c(2, 2))
plot( rstandard(m1)~fitted(m1))
plot(cooks.distance(m1), type="h")
qqnorm(rstandard(m1)); qqnorm(qresid(m1))
colSums(influence.measures(m1)$is.inf)
data(belection)
data(belection)
plot(y/m~li); plot(y/m~gender)
View(belection)
data(belection)
plot(belection$Party~belection$Females)
data(belection)
plot(belection$Females~belection$Party)
plot(belection$Females~belection$Region)
rstandard(p)#residual estandarizado
fitted(p) #Este ejemplo demuestra cómo encontrar los valores ajustados de un modelo de regresión lineal usando la función added().
cooks.distance(p) #La distancia de Cook es un resumen de cuánto cambia un modelo de regresión cuando se elimina la i-ésima observación
scatter.smooth( rstandard(p) ~ fitted(p) )
qqnorm( rstandard(p) )
qqline( rstandard(p) )
plot( cooks.distance(p), type="h")
plot( rstandard(p) ~ Babies$PromedioTemperatura)
m1 <- glm(Females~Party, data=belection, family=binomial)
m1 <- glm(Females~Party, data=belection, family=binomial(link=logit))
gender<-belection%>%mutate(gender = case_when(Females==0 & Males==0)
gender
gender<-belection%>%mutate(gender = case_when(Females==0 & Males==0)
gender
m1 <- glm(jitter(Party)~Females, data=belection,    family=binomial(link=logit))
jitter(belection$Party)
belection$Party
base1 <- belection %>% mutate(Party  = case_when( Party == 'Cons' ~ 0,
Party == 'Green' ~ 1,
Party == 'Labour' ~ 2,
Party == 'LibDem' ~ 3,
Party == 'Other' ~ 4))
library(dplyr)
base1 <- belection%>%mutate(Party  = case_when( Party == 'Cons' ~ 0,
Party == 'Green' ~ 1,
Party == 'Labour' ~ 2,
Party == 'LibDem' ~ 3,
Party == 'Other' ~ 4))
base1
m1 <- glm(jitter(Party)~Females, data=belection,    family=binomial(link=logit))
m1 <- glm(jitter(Party)~Females, data=base1,    family=binomial(link=logit))
data(cervical)
cervical$AgeNum <- rep( c(25, 35, 45, 55), 4)
par( mfrow=c(2, 2))
### Part 1
with( cervical, {
plot( Deaths/Wyears ~ AgeNum, type="n")
lines(Deaths/Wyears ~ AgeNum, lty=1,
subset=(Country==unique(Country)[1]) )
lines(Deaths/Wyears ~ AgeNum, lty=2,
subset=(Country==unique(Country)[2]) )
lines(Deaths/Wyears ~ AgeNum, lty=3,
subset=(Country==unique(Country)[3]) )
lines(Deaths/Wyears ~ AgeNum, lty=4,
subset=(Country==unique(Country)[4]) )
legend("topleft", lty=1:4, legend=unique(cervical$Country) )
})
View(cervical)
data(cervical)
cervical$AgeNum <- rep( c(25, 35, 45, 55), 4)
par( mfrow=c(2, 2))
### Part 1
with( cervical, {
plot( Deaths/Wyears ~ AgeNum, type="n")
lines(Deaths/Wyears ~ AgeNum, lty=1,
subset=(Country==unique(Country)[1]) )
lines(Deaths/Wyears ~ AgeNum, lty=2,
subset=(Country==unique(Country)[2]) )
lines(Deaths/Wyears ~ AgeNum, lty=3,
subset=(Country==unique(Country)[3]) )
lines(Deaths/Wyears ~ AgeNum, lty=4,
subset=(Country==unique(Country)[4]) )
legend("topleft", lty=1:4, legend=unique(cervical$Country) )
})
